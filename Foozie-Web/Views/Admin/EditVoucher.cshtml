@model Foozie_Web.Models.VOUCHER

@{
    ViewBag.Title = "EditVoucher";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>EditVoucher</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>VOUCHER</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.voucher_id)


    <div class="form-group mb-2">
        @Html.LabelFor(model => model.max_used, "Max Used", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col">
            @Html.EditorFor(model => model.max_used, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.max_used, "", new { @class = "badge bg-danger" })
        </div>
    </div>

    <div class="form-group mb-2">
        @Html.LabelFor(model => model.used, "Used", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col">
            @Html.EditorFor(model => model.used, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
            @Html.ValidationMessageFor(model => model.used, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group mb-2">
        @Html.LabelFor(model => model.expired, "Expired", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col">
            <input type="date" name="expired" class="form-control datepicker" />
            @Html.ValidationMessageFor(model => model.expired, "", new { @class = "badge bg-danger" })
        </div>
    </div>

    <div class="form-group mb-2">
        @Html.LabelFor(model => model.reduced_price, "Reduced Price", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col">
            @Html.EditorFor(model => model.reduced_price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.reduced_price, "", new { @class = "badge bg-danger" })
        </div>
    </div>

    <div class="form-group mb-2">
        @Html.LabelFor(model => model.order_price, "Order Price", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col">
            @Html.EditorFor(model => model.order_price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.order_price, "", new { @class = "badge bg-danger" })
        </div>
    </div>

    <div class="form-group mb-2">
        @Html.LabelFor(model => model.name, "Name", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col">
            @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.name, "", new { @class = "badge bg-danger" })
        </div>
    </div>

    <div class="form-group mb-2">
        @Html.LabelFor(model => model.description, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "badge bg-danger" })
        </div>
    </div>

    <div class="form-group mb-2">
        @Html.LabelFor(model => model.code, "Code", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col">
            @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.code, "", new { @class = "badge bg-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" />
        </div>
    </div>
</div>
}


<script>
    var reduce = document.querySelector("#reduced_price")
    var order = document.querySelector("#order_price")
    reduce.addEventListener("change", generate)
    order.addEventListener("change", generate)
    var des = document.querySelector("#description")
    var vouName = document.querySelector("#name")

    function generate() {
        des.value = `Thanh toán tối thiểu ${parseInt(order.value).toLocaleString('en')}đ`
        vouName.value = `Giảm ${parseInt(reduce.value).toLocaleString('en')}đ cho đơn hàng từ ${parseInt(order.value).toLocaleString('en')}đ`
    }

</script>
