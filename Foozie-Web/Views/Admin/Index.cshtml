@model List<Foozie_Web.Models.ORDER>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="https://cdn.jsdelivr.net/npm/feather-icons@4.28.0/dist/feather.min.js"
        integrity="sha384-uO3SXW5IuS1ZpFPKugNNWqTZRRglnUJK6UAZ/gxOX80nxEkN9NcGZTftn6RzhGWE"
        crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4/dist/Chart.min.js"
        integrity="sha384-zNy6FEbO50N+Cg5wap8IKA4M/ZnLJgzc6w2NqACZaK0u0FXfOWRRJOnQtpZun8ha"
        crossorigin="anonymous"></script>

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Dashboard</h1>
</div>

<canvas class="my-4 w-100"
        id="myChart"
        width="900"
        height="380"></canvas>



<script>

    var ctx = document.getElementById('myChart')
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: [],
            datasets: [{
                data: [],
                lineTension: 0,
                backgroundColor: 'transparent',
                borderColor: '#007bff',
                borderWidth: 4,
                pointBackgroundColor: '#007bff'
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: false
                    }
                }]
            },
            legend: {
                display: false
            }
        }
    })

    async function getData() {
        let res = await fetch('https://localhost:44316/Admin/ChartData')
        let data = await res.json()
        return data
    }

    async function getLabel() {
        let res = await fetch('https://localhost:44316/Admin/ChartDate')
        let label = await res.json()
        return label
    }

    function updateData(chart, data) {
        //chart.data.labels.forEach((dataset) => {
        //    dataset.data.push(50);
        //});
        for (let i = 0; i < data.length; i++) {
            chart.data.datasets[0].data[i] = data[i].total;
        }
        chart.update();
    }

    function addLabels(chart, labels) {
        for (let i = 0; i < labels.length; i++) {
            chart.data.labels[i] = labels[i].date;
        }
        chart.update();
    }

    getLabel()
        .then(label => { addLabels(myChart, label) })
    getData()
        .then(data => { updateData(myChart, data) })

        
</script>






